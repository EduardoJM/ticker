services:
  db:
    image: postgres:16-alpine
    restart: always
    volumes:
      - ticker_db:/var/lib/postgresql/data/
    environment:
      - TZ=America/Sao_Paulo
      - POSTGRES_DB=ticker_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=ZfOK95AHzN8xcPASt%W1
    healthcheck:
      test: "pg_isready -U postgres -d ticker_db"
      interval: 5s
      timeout: 10s
      retries: 5

  api:
    build: .
    restart: always
    ports:
      - 8000:8000
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: "curl --silent --fail http://localhost:8000/health/ || exit 1"
      interval: 10s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    restart: always
    command: python manage.py procrastinate worker
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

volumes:
  ticker_db:
